apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: Release Workflow
on:
  workflow_dispatch:
    inputs:
      manifest:
        type: string
        required: true
        description: This is a system-generated parameter and is required for use in
          application releases. Refer to
          https://docs.cloudbees.com/docs/cloudbees-platform/latest/applications/releases#manifest
          for the expected format
metadata:
  stages/v1alpha1:
    - name: Release Readiness
      jobs:
        - create-release-issue
        - gather-evidence
        - quality-checks
        - update-jira-tickets
        - approval
    - name: Quality Assurance
      jobs:
        - deploy-to-qa
        - enable-feature-flags-qa
        - run-tests-qa
        - exit-criteria-qa
    - name: Staging
      jobs:
        - release-manager-approval
        - deploy-to-staging
        - enable-feature-flags-staging
        - run-tests-staging
        - exit-criteria-staging
        - create-snow-change-request
    - name: Production
      jobs:
        - wait-for-snow-change-request
        - deploy-to-prod
        - run-smoke-tests
        - roll-out-feature-flags
jobs:
  create-release-issue:
    outputs:
      issue-key: ${{ steps.create-release-issue.outputs.issue-key }}
      issue-url: ${{ steps.create-release-issue.outputs.issue-url }}
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  gather-evidence:
    needs:
      - create-release-issue
    outputs:
      issues: ${{ steps.get-issues.outputs.issues }}
      total: ${{ steps.get-issues.outputs.total }}
      issues-table: ${{ steps.format-issues.outputs.issues-table }}
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  quality-checks:
    needs:
      - gather-evidence
    outputs:
      security-scan-results: ${{ steps.security-scan.outputs.results }}
      code-quality-score: ${{ steps.code-analysis.outputs.quality-score }}
      dependency-vulnerabilities: ${{ steps.dependency-check.outputs.vulnerabilities }}
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  update-jira-tickets:
    needs:
      - quality-checks
      - create-release-issue
      - gather-evidence
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  approval:
    needs:
      - update-jira-tickets
    timeout-minutes: 4320
    with:
      instructions: ""
      disallowLaunchByUser: false
    delegates: cloudbees-io/manual-approval/custom-job.yml@v1
  deploy-to-qa:
    needs:
      - approval
    uses: cloudbees-days/hackers-app/.cloudbees/workflows/deployer.yaml
    with:
      manifest: ${{ inputs.manifest }}
      environment: hackers-qa
    secrets: inherit
    vars: inherit
  enable-feature-flags-qa:
    environment: hackers-qa
    needs:
      - deploy-to-qa
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  run-tests-qa:
    environment: hackers-qa
    needs:
      - enable-feature-flags-qa
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  exit-criteria-qa:
    environment: hackers-qa
    needs:
      - run-tests-qa
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  release-manager-approval:
    needs:
      - exit-criteria-qa
    timeout-minutes: 4320
    delegates: cloudbees-io/manual-approval/custom-job.yml@v1
    with:
      instructions: ""
      disallowLaunchByUser: false
      approvers: ""
      notifyAllEligibleUsers: false
  deploy-to-staging:
    needs:
      - release-manager-approval
    uses: cloudbees-days/hackers-app/.cloudbees/workflows/deployer.yaml
    with:
      manifest: ${{ inputs.manifest }}
      environment: hackers-staging
    secrets: inherit
    vars: inherit
  enable-feature-flags-staging:
    environment: hackers-staging
    needs:
      - deploy-to-staging
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  run-tests-staging:
    environment: hackers-staging
    needs:
      - enable-feature-flags-staging
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  exit-criteria-staging:
    environment: hackers-staging
    needs:
      - run-tests-staging
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  create-snow-change-request:
    needs:
      - exit-criteria-staging
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  wait-for-snow-change-request:
    needs:
      - create-snow-change-request
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  deploy-to-prod:
    needs:
      - wait-for-snow-change-request
    uses: cloudbees-days/hackers-app/.cloudbees/workflows/deployer.yaml
    with:
      manifest: ${{ inputs.manifest }}
      environment: hackers-prod
    secrets: inherit
    vars: inherit
  run-smoke-tests:
    environment: hackers-prod
    needs:
      - deploy-to-prod
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  roll-out-feature-flags:
    environment: hackers-prod
    needs:
      - run-smoke-tests
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
