apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My workflow
on:
  workflow_dispatch:
    inputs:
      manifest:
        type: string
        required: true
        description: A sample manifest should go here, to help user
metadata:
  stages/v1alpha1:
    - name: Stage1
      jobs:
        - a
        - c
        - b
        - d
    - name: Stage3
      jobs:
        - job2
    - name: Stage
      jobs:
        - job
    - name: Stage2
      jobs:
        - job1
jobs:
  a:
    needs:
      - d
    environment: ""
    outputs: {}
    steps:
      - run: |
          echo "hello world"
        uses: docker://golang:1.20.3-alpine3.17
        name: Say hello
        shell: sh
  b:
    needs:
      - a
    environment: ""
    outputs: {}
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "hello world"
  c:
    needs:
      - a
      - b
    timeout-minutes: 420
    with:
      instructions: inst
      disallowLaunchByUser: false
      approvers: 4b7f53fc-d4fe-11ec-bb55-42010a83ae55
      notifyAllEligibleUsers: false
    delegates: cloudbees-io/manual-approval/custom-job.yml@v1
  d:
    needs:
      - c
    environment: ""
    outputs: {}
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        args: postgres
    steps:
      - name: Run tests against postgres db achange
        uses: docker://postgres:13
        env:
          DATABASE_URL: postgres://testuser:testpassword@localhost:5432/testdb
        run: >
          sleep 60

          echo "DATABASE_URL is $DATABASE_URL"

          # Replace this with your actual test command.

          psql -h localhost -U testuser -d testdb -c "SELECT 'Hello,
          PostgreSQL!' AS greeting;"
  job:
    needs: []
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: echo "hello world"
  job1:
    needs:
      - job
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: echo "hello world"
  job2:
    needs: []
    steps:
      - name: Say hello
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: echo "hello world"
